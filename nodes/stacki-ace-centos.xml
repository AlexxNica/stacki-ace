<?xml version="1.0" standalone="no"?>

<kickstart>


<description>
This defines a generic CentOS machine that will be used as the base image
(e.g., stacki-centos.img)
</description>


<pre>

if [ '&bootdisk;' == 'sda' ]
then
	BOOTPART=sda1
	ROOTPART=sda2
fi

if [ '&bootdisk;' == 'mmcblk0' ]
then
	BOOTPART=mmcblk0p1
	ROOTPART=mmcblk0p2
fi

<!-- nukedisk -->
/usr/bin/dd if=/dev/zero of=/dev/&bootdisk; bs=512 count=1024
/usr/sbin/parted -s /dev/&bootdisk; mklabel msdos

<!-- partition -->
/usr/sbin/parted -s /dev/&bootdisk; "mkpart primary fat32 0% 100M"
/usr/sbin/parted -s /dev/&bootdisk; "mkpart primary ext4 100M 100%"

<!-- format -->

/usr/sbin/mkfs -t vfat /dev/$BOOTPART
/usr/sbin/mkfs -t ext4 /dev/$ROOTPART

<!-- mount -->
mkdir -p /run/mnt/sysimage

/usr/bin/mount /dev/$ROOTPART /run/mnt/sysimage

(cd /run/mnt/sysimage ; mkdir boot ; /usr/bin/mount /dev/$BOOTPART boot)

<!-- prep package install -->

mkdir -p /run/mnt/sysimage/etc/yum.repos.d

<file name="/run/mnt/sysimage/etc/yum.repos.d/stacki.repo">
<eval shell="/opt/stack/bin/python">
import stack.api

#
# output "url" line first -- the url line will be a path to 'stacki'
#
listpallet = stack.api.Call('list pallet')

for o in listpallet:
	boxes = o['boxes'].split()
	if '&box;' in boxes:
		print '[%s-%s-%s]' % (o['name'], o['version'], o['release'])
		print 'name=%s %s %s' % (o['name'], o['version'], o['release'])
		print 'baseurl=http://%s/install/pallets/%s/%s/%s/%s/%s' % \
			('&Kickstart_PrivateAddress;', o['name'], o['version'],				o['release'], o['os'], o['arch'])
		print 'assumeyes=1'
		print 'gpgcheck=0'

for o in stack.api.Call('list cart'):
	boxes = o['boxes'].split()
	if '&box;' in boxes:
		print '&lt;stack:repo&gt; --name="%s" --baseurl=http://127.0.0.1/install/carts/%s&lt;/stack:repo&gt;' % (o['name'], o['name'])
		print '[cart-%s]' % (o['name'])
		print 'name=cart %s' % (o['name'])
		print 'baseurl=http://%s/install/carts/%s' % (o['name'])
		print 'assumeyes=1'
		print 'gpgcheck=0'
</eval>
</file>

</pre>


<package>
@core
raspberrypi2-kernel
raspberrypi2-firmware
raspberrypi2-kernel-firmware
</package>

<post>
rpm -e httpd
</post>

<post>

if [ '&bootdisk;' == 'sda' ]
then
	BOOTPART=sda1
	ROOTPART=sda2
fi

if [ '&bootdisk;' == 'mmcblk0' ]
then
	BOOTPART=mmcblk0p1
	ROOTPART=mmcblk0p2
fi

<!-- clean up Stacki repo -->

rm -f /etc/yum.repos.d/stacki.repo

<!-- fix a syntax error in CentOS-armhfp-kernel.repo -->

sed --in-place -e 's/\$kvariant/rpi2/' \
	/etc/yum.repos.d/CentOS-armhfp-kernel.repo


<!-- boot loader config -->

<file name="/boot/cmdline.txt" vars="expanded">
dwc_otg.lpm_enable=0 root=/dev/$ROOTPART rootfstype=ext4 elevator=deadline rootwait
</file>

<file name="/boot/config.txt">
program_usb_boot_mode=1
</file>


<!-- write fstab -->

<file name="/etc/fstab" vars="expanded">
/dev/$BOOTPART /boot vfat noatime 0 0
/dev/$ROOTPART / ext4 noatime 0 0
</file>


<!-- networking config -->

<file name="/etc/sysconfig/network">
NETWORKING=yes
HOSTNAME=localhost.localdomain
</file>

<file name="/etc/sysconfig/network-scripts/ifcfg-eth0">
DEVICE=eth0
BOOTPROTO=dhcp
ONBOOT=yes
MTU=1500
</file>


<!-- disable selinux -->

<file name="/etc/selinux/config">
SELINUX=disabled
</file>


<!-- set the root password -->

echo "stacki-centos" | passwd root --stdin

</post>


</kickstart> 

